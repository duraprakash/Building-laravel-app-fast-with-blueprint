Instructions:

1. create project using laravel10
    composer create-project laravel/laravel emp_sys "10.*" --prefer-dist

2. change directory
    cd emp_sys

3. run server
    php artisan serve

db connection with xammp
-- .env file --
    DB_CONNECTION=mysql
    DB_HOST=127.0.0.1
    DB_PORT=3306
    DB_DATABASE=emp_sys
    DB_USERNAME=root
    DB_PASSWORD=

4. migrate
    php artisan migrate

5. install blueprint
    composer require --dev laravel-shift/blueprint

6. draft.yaml file
    php artisan blueprint:new

-- draft.yaml file --
    models:
    Employee:
        name: string:100
        identifiacation: string:100
        birth: datetime:100
        salary: integer

    controllers:
    # ...

7. build model from yaml -generate model, migration and factory
    php artian blueprint:build

8. register model for seeding in DatabaseSeeder
    public function run(): void
    {
        \App\Models\Employee::factory(10)->create();
    }

9. run migration
    php artisan migrate:fresh

10. changes or update in draft.yaml structure -delete model, migration and factory
    php artisan blueprint:erase

    then, build blueprint
        php artian blueprint:build 
    also, run fresh migration
        php artisan migrate:fresh
    lastly, seeding
        php artisan db:seed

11. create blueprint.bat file manually which include -1 command 4 tasks
    php artisan blueprint:erase
    php artisan blueprint:build
    php artisan migrate:fresh
    php artisan db:seed

12. execute blueprint.bat in vscode terminal(error) -use system terminal(cmd)
    [in command prompt]  =>  blueprint
    [in powershell vscode terminal]  =>  ./blueprint

13. delete or rename draft.yaml to build new blueprint file
    draft1.yaml

14. (again) create new draft.yaml file
    php artisan blueprint:new

15. trace blueprint
    php artisan blueprint:trace

    NOTE: if dublicate model,migration and factory is build then run blueprint:erase

16. draft.yaml multiple line and model modifier
    models:
    Employee:
        name: 'string:100'
        identifiacation: 'string:100 unique'
        birth: datetime
        salary: integer
        marital_status: enum:single,married,divorced
        bonus: decimal:8,2 nullable
        order: unsignedinteger default:1 index

    controllers:
    # ...

    then, run batch file
    ./blueprint

17. one to many relationship [employee-department]
    models:
    Employee:
        name: "string:100"
        identifiacation: "string:100 unique"
        birth: datetime
        salary: integer
        marital_status: enum:single,married,divorced
        bonus: decimal:8,2 nullable
        order: unsignedinteger default:1 index
        department_id: id foreign:department.id
    Department:
        name: string:100

    controllers:
    # ...

    then, run batch file
    ./blueprint

18. many to many relationship [employee-project]
    models:
    Employee:
        name: "string:100"
        identifiacation: "string:100 unique"
        birth: datetime
        salary: integer
        marital_status: enum:single,married,divorced
        bonus: decimal:8,2 nullable
        order: unsignedinteger default:1 index
        department_id: id foreign:department.id
        relationships:
        belongsToMany: Project
    Department:
        name: string:100
        relationships:
        hasMany: Employee
    Project:
        name: string:100
        relationships:
        belongsToMany: Employee

    controllers:
    # ...

    then, run batch file
    ./blueprint

19. one to many relationship [emp-contactinfo]
    models:
    Employee:
        name: "string:100"
        identifiacation: "string:100 unique"
        birth: datetime
        salary: integer
        marital_status: enum:single,married,divorced
        bonus: decimal:8,2 nullable
        order: unsignedinteger default:1 index
        department_id: id foreign:department.id
        relationships:
        belongsToMany: Project
        hasOne: ContactInfo
    ContactInfo:
        phone: string:100
        email: string:100
        relationships:
        belongsTo: Employee
    Department:
        name: string:100
        relationships:
        hasMany: Employee
    Project:
        name: string:100
        relationships:
        belongsToMany: Employee

    controllers:
    # ...

    then, run batch file
    ./blueprint

20. shorthand timestampsTz, softDeletesTz on project
    models:
    Employee:
        name: "string:100"
        identifiacation: "string:100 unique"
        birth: datetime
        salary: integer
        marital_status: enum:single,married,divorced
        bonus: decimal:8,2 nullable
        order: unsignedinteger default:1 index
        department_id: id foreign:department.id
        relationships:
        belongsToMany: Project
        hasOne: ContactInfo
    ContactInfo:
        phone: string:100
        email: string:100
        relationships:
        belongsTo: Employee
    Department:
        name: string:100
        relationships:
        hasMany: Employee
    Project:
        name: string:100
        timestampsTz
        softDeletesTz
        relationships:
        belongsToMany: Employee

    controllers:
    # ...

    then, run batch file
    ./blueprint

21. seeders [department and contactinfo]
    models:
    Employee:
        name: "string:100"
        identifiacation: "string:100 unique"
        birth: datetime
        salary: integer
        marital_status: enum:single,married,divorced
        bonus: decimal:8,2 nullable
        order: unsignedinteger default:1 index
        department_id: id foreign:department.id
        relationships:
        belongsToMany: Project
        hasOne: ContactInfo
    ContactInfo:
        phone: string:100
        email: string:100
        relationships:
        belongsTo: Employee
    Department:
        name: string:100
        relationships:
        hasMany: Employee
    Project:
        name: string:100
        timestampsTz
        softDeletesTz
        relationships:
        belongsToMany: Employee

    seeders: Project , ContactInfo

    controllers:
    # ...

    then, run batch file
    ./blueprint

    IF DOESN'T WORK THE ADD THIS TO THE DatabaseSeeder
    public function run(): void
    {
        \App\Models\Project::factory(10)->create();
        \App\Models\ContactInfo::factory(10)->create();
    }

22. blueprint configuration
    blueprint.php file in config folder -in model folder there will be no more generated models
    php artisan blueprint:erase
    php artisan vendor:publish --tag=blueprint-config

    -- in config/blueprint.php --
    //'generate_fqcn_route' => false, to 
    'generate_fqcn_route' => true,

    -- in routes/web.php --
    Route::resource('employee', 'EmployeeController');
    Route::get('employee/test', [App\Http\Controllers\employmentController::class, 'test']);